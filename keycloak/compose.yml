volumes:
  llamapuz_bff_keycloak_postgres_data_test:
services:
  postgres-keycloak:
   container_name: postgres-keycloak
   image: postgres:latest
   environment:
   - POSTGRES_DB=keycloak
   - POSTGRES_PASSWORD=secret
   - POSTGRES_USER=keycloak
   volumes:
   - llamapuz_bff_keycloak_postgres_data_test:/var/lib/postgresql/data
   healthcheck:
     test: ["CMD-SHELL", "pg_isready", "-d", "keycloak", "-U", "keycloak"]
     interval: 3s
     timeout: 60s
     retries: 20
  
  keycloak:
    container_name: llamasad-bff-test
    image: quay.io/keycloak/keycloak:24.0.0
    command:
    - start-dev
    - --spi-theme-static-max-age=-1
    - --spi-theme-cache-themes=false
    - --spi-theme-cache-templates=false
    - --verbose
    ports:
    - 8080:8080
    volumes:
      - ./theme/custom/:/opt/keycloak/themes/custom/
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres-keycloak:5432/keycloak
      KC_DB_SCHEMA: public
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: secret
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_HTTP_PORT: 8080
      KC_HOSTNAME_URL: http://localhost:8080/auth
      KC_HOSTNAME_ADMIN_URL: http://localhost:8080/auth
      KC_HOSTNAME_STRICT_BACKCHANNEL: true
      #KC_HOSTNAME_DEBUG: true
      KC_HTTP_RELATIVE_PATH: /auth/
      KC_HTTP_ENABLED: true
      KC_HEALTH_ENABLED: true
      # KC_LOG_LEVEL: DEBUG
    extra_hosts:
    - "host.docker.internal:host-gateway"
    depends_on:
      postgres-keycloak:
        condition: service_healthy
    healthcheck:
      test: ['CMD-SHELL', '[ -f /tmp/HealthCheck.java ] || echo "public class HealthCheck { public static void main(String[] args) throws java.lang.Throwable { System.exit(java.net.HttpURLConnection.HTTP_OK == ((java.net.HttpURLConnection)new java.net.URL(args[0]).openConnection()).getResponseCode() ? 0 : 1); } }" > /tmp/HealthCheck.java && java /tmp/HealthCheck.java http://localhost:8080/auth/health/live']
      interval: 5s
      timeout: 5s
      retries: 20
